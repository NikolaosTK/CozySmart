@model CozySmart.ViewModels.AccommodationFormViewModel
@{
    ViewBag.Title = "New";
}

<h2 class="col-md-offset-2">New Accommodation</h2>
<hr />


@using (Html.BeginForm("Save", "Accommodations"))
{
    <div class="form-horizontal">

        @Html.ValidationSummary(true, "Please fix the following errors")

        <div class="form-group">
            @Html.LabelFor(m => m.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Title)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Location, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Location)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Adress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Adress, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Adress)

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Thumbnail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Thumbnail, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Thumbnail)

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.CategoryId, new SelectList(Model.Categories, "Id", "Description"), "Select a category", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.CategoryId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Occupancy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Occupancy, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Occupancy)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Bedrooms, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 ">
                @Html.TextBoxFor(m => m.Bedrooms, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Bedrooms)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Baths, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 ">
                @Html.TextBoxFor(m => m.Baths, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Baths)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Description)

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 ">
                @Html.TextBoxFor(m => m.Price, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Price)
            </div>
        </div>

        @for (int i = 0; i < Model.Amenities.Count(); i++)
        {
            <div class="form-group col-md-2">
                @Html.HiddenFor(m => m.Amenities[i].Id)
                @Html.CheckBoxFor(m => m.Amenities[i].IsChecked)
                @Html.LabelFor(m => m.Amenities[i].IsChecked, Model.Amenities[i].Display)
            </div>
        }



        @Html.HiddenFor(m => m.Id)
        @Html.AntiForgeryToken()

        <br />

        <div class="form-group">
            <div class="col-md-offset-3 col-md-7">
                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#ConfirmationToSaveModal">Save</button>

            </div>
        </div>
    </div>

    <!-- Ask to Save Modal -->
    <div class="modal fade" id="ConfirmationToSaveModal" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Saving Accommodation Confirmation</h4>
                </div>
                <div class="modal-body">
                    <p>Some text in the modal.</p>
                </div>
                <div class="modal-footer">
                    
                    <button type="submit" class="btn btn-primary" data-toggle="modal">Confirm</button>

                    <button type="button" class="btn btn-success" data-dismiss="modal">Cancel</button>
                </div>
            </div>

        </div>
    </div>

}

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
}